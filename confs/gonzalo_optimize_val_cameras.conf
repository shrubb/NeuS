dataset {

}

train {
    finetune = true
    finetuning_init_algorithm = "pick_0"
    parts_to_freeze = ["sdf", "deviation", "color", "nerf_outside"] // Only train cameras

    cameras_optimizer_extra_args {
        base_learning_rate = 2.5e-5
    }
    learning_rate_alpha = 0.02
    learning_rate_reduce_steps = []
    learning_rate_reduce_factor = 0.2
    warm_up_end = 0
    end_iter = 12000
    restart_from_iter = 0

    batch_size = 512
    validate_resolution_level = 2
    anneal_end = 0
    use_white_bkgd = False

    save_freq = 99999999
    val_freq = 3000
    val_mesh_freq = 99999999
    report_freq = 100

    igr_weight = 0.0
    mask_weight = 0.0
    focal_fix_weight = 0.1

    parts_to_skip_loading = ["cameras"]
    apply_camera_correction_to_val = true
}
